package de.worketplace.team06.server.db;

import java.sql.*;
import java.util.Vector;
import java.text.SimpleDateFormat;

import de.worketplace.team06.shared.bo.*;

public class MarketplaceMapper {
	
	private static MarketplaceMapper marketplaceMapper = null;
	
	/**
	 * Initialisierung eines einfachen Datumsformat um später Variablen vom Datentyp Date
	 * in die Datenbank speichern zu können. (datetime mysql)
	 */
	private SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
	
	protected MarketplaceMapper() {
		
	}

	public static MarketplaceMapper marketplaceMapper() {
		if (marketplaceMapper == null) {
			marketplaceMapper = new MarketplaceMapper();
		}
		
		return marketplaceMapper;
	}
	
	
	/**
	 * Die Insert Methode wird nur beim Anlegen eines neuen Marktplatzes aufgerufen.
	 * 
	 * @param m
	 * @return
	 */
	
	public Marketplace insert(Marketplace m) {
	String currentTime = sdf.format(m.getCreated());	
		
	Connection con = DBConnection.connection();
		
		try {
			Statement stmt = con.createStatement();
			
			ResultSet rs = stmt.executeQuery("SELECT MAX(id) AS maxid " + "FROM marketplace ");
			
			if (rs.next()) {
				
				m.setID(rs.getInt("maxid") + 1);
		
				stmt = con.createStatement();
				stmt.executeUpdate("INSERT INTO marketplace (id, created, title, description) " + "VALUES (" + m.getID() + ",'" + currentTime + "','" + m.getTitle() + "','" + m.getDescription() + "')");
			}
		}
		catch (SQLException e2) {
			e2.printStackTrace();
		}
		return m;
	}
	
	public Vector<Marketplace> findAll() {
		
		Connection con = DBConnection.connection();
			
			Vector<Marketplace> result = new Vector<Marketplace>();
			
			try {
				Statement stmt = con.createStatement();
				
				ResultSet rs = stmt.executeQuery("Select id, created, title, description FROM marketplace " + "ORDER BY id");
				
				
				while (rs.next()) {
					
					Marketplace m = new Marketplace();
					m.setID(rs.getInt("id"));
					m.setCreated(rs.getTimestamp("created"));	
					m.setTitle(rs.getString("title"));
					m.setDescription(rs.getString("description"));
					
					result.addElement(m);
				}
			}
			catch (SQLException e2) {
				e2.printStackTrace();
			}
			return result;
		}
/*	
 * 
 * 
 * PATRICK
 * 
	public Marketplace findByKey(int id)
	
	public Marketplace findBy schauen 
	
	public Marketplace insert(Marketplace a)
	
	public Marketplace update(Marketplace a)
	
	public void delete(Marketplace a)
*/

	public Vector<Marketplace> findById(int id) {
		// TODO Auto-generated method stub
		return null;
	}
	

	//AutoGeneratedBy Johannes
	public void update(Marketplace marketplace) {
		// TODO Auto-generated method stub
		
	}
	
	//AutoGeneratedBy Johannes
	public Vector<Marketplace> findByOrgaUnitID(int id) {
		// TODO Auto-generated method stub
		return null;
	}
}
